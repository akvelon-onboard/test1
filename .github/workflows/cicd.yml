# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  run-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: "main"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: run-lint
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      - name: ssh-job
        # You may pin to the exact commit or the version.
        # uses: nekiro/ssh-job@e0d177751aced5bcaf110ce4d782a681e5e12856
        uses: nekiro/ssh-job@v1.0.5
        with:
          # Target machine hostname or ip
          host: $DEPLOY_SERVER_DEV
          # Port to use while connecting
          port: 22
          # Ssh private key used to connect to target machine
          key: ${{ secrets.SERVER_SSH_KEY }}
          # Ssh user
          user: ubuntu
          #envs: # optional
          # Environment variables that are ommited from passing to the shell
          command: |
            cd test1
            git pull
            docker-compose up -d --build
            
          
          # Export all action options to shell script
          #exportActionOptions: # optiona
